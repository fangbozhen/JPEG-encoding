# JPEG encoder docs

## 简介

jpeg-encoding 实现了读入一个二进制图形文件并将它进行JPEG压缩的过程

主要分为颜色空间转换、离散余弦变换、量化、zigzag排列和压缩的过程

## 颜色空间转换

```python
def RGB_to_YCrCb(r_arr, g_arr, b_arr, size)
```

RGB_to_YCrCb函数实现了从三通道数据到YCrCb格式的转换。

输入包括三个数组，分别表示R，G，B三个通道的数据，以及总像素数size。输出为三个数组，分别表示亮度Y以及色度Cr、Cb

## 离散余弦变换（Discrete Cosine Transform）

```python
def dct_2d(mat)
```

函数dct实现了对$ 8 \times 8 $的块进行2维的离散余弦变换。

使用矩阵乘法。

你需要输入$ 8 \times 8 $的块，函数将会返回它进行离散余弦变换后的结果

## 量化

```python
def quantize(arr, typ)
```

quantize函数根据亮度和色度的量化矩阵进行处理，输入$ 8 \times 8 $的数据块，输出量化后的结果

> **注意**：量化表会根据你在setting中设置的quality对标准表进行变化

## zigzag排列

```python
def zigzag(arr)
```

zigzag函数对二维矩阵通过zigzag变换为一维矩阵。输入$ 8 \times 8 $块，输出长度为64的一维数组

## 压缩

压缩过程实际实现了游程编码和范式Huffman编码的综合过程。

输入一个$ 8 \times 8 $的数据块以及操作色块的类型，会返回经过游程编码和范式Huffman编码后的二进制文件。返回值是str类型

## 输出

write函数中实现了对JPEG文件头的书写，具体可见同目录下的[JPEG文件头](doc/JPEG文件头.mkd)

## settings

在设置中配置基础的设置

你可以通过设置 DEBUG = 1 获得图片在每个处理阶段的数据

quality是在1-100中的整数值，值越大，图像质量越高，压缩比越低

图像的长、宽、通道基本信息





